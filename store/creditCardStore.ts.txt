import { create } from 'zustand';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { persist } from 'zustand/middleware';

interface Payment {
  id: string;
  cardId: string;
  amount: number;
  date: string;
  notes?: string;
}

interface CreditCard {
  id: string;
  name: string;
  bank: string;
  cardNumber: string;
  limit: number;
  dueDate: string;
  statementDate: string;
  color: string;
}

interface Store {
  cards: CreditCard[];
  payments: Payment[];
  addCard: (card: CreditCard) => void;
  deleteCard: (id: string) => void;
  addPayment: (payment: Payment) => void;
}

export const useCreditCardStore = create<Store>()(
  persist(
    (set, get) => ({
      cards: [],
      payments: [],
      addCard: (card) => set({ cards: [...get().cards, card] }),
      deleteCard: (id) => set({
        cards: get().cards.filter((c) => c.id !== id),
        payments: get().payments.filter((p) => p.cardId !== id)
      }),
      addPayment: (payment) => set({ payments: [...get().payments, payment] }),
    }),
    {
      name: 'credit-card-store',
      getStorage: () => AsyncStorage,
    }
  )
);
